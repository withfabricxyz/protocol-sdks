// Generated by @wagmi/cli@1.3.0 on 7/20/2023 at 4:06:51 PM
import {
  getContract,
  GetContractArgs,
  writeContract,
  WriteContractArgs,
  WriteContractPreparedArgs,
  WriteContractUnpreparedArgs,
  prepareWriteContract,
  PrepareWriteContractConfig,
  watchContractEvent,
  WatchContractEventConfig,
  WatchContractEventCallback,
  WriteContractMode,
} from '@wagmi/core'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CrowdFinancingV1
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const crowdFinancingV1ABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'numTokens',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Contribution',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'Fail' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'version', internalType: 'uint8', type: 'uint8', indexed: false },
    ],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'numTokens',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Payout',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'numTokens',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'TransferContributions',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'numTokens',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Withdraw',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'contributeERC20',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [],
    name: 'contributeEth',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'contributionRangeFor',
    outputs: [
      { name: 'min', internalType: 'uint256', type: 'uint256' },
      { name: 'max', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'endsAt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'erc20Address',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'feeRecipientAddress',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'goalMax',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'goalMin',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'recipient', internalType: 'address', type: 'address' },
      { name: 'minGoal', internalType: 'uint256', type: 'uint256' },
      { name: 'maxGoal', internalType: 'uint256', type: 'uint256' },
      { name: 'minContribution', internalType: 'uint256', type: 'uint256' },
      { name: 'maxContribution', internalType: 'uint256', type: 'uint256' },
      { name: 'startTimestamp', internalType: 'uint256', type: 'uint256' },
      { name: 'endTimestamp', internalType: 'uint256', type: 'uint256' },
      { name: 'erc20TokenAddr', internalType: 'address', type: 'address' },
      { name: 'feeRecipientAddr', internalType: 'address', type: 'address' },
      { name: 'feeTransferBips', internalType: 'uint16', type: 'uint16' },
      { name: 'feeYieldBips', internalType: 'uint16', type: 'uint16' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isContributionAllowed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isEnded',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isEthDenominated',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isGoalMaxMet',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isGoalMinMet',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isStarted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isTransferAllowed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isUnlockAllowed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isWithdrawAllowed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxAllowedContribution',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minAllowedContribution',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'recipientAddress',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'startsAt',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'state',
    outputs: [
      { name: '', internalType: 'enum CrowdFinancingV1.State', type: 'uint8' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'transferBalanceToRecipient',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'transferFeeBips',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'unlockFailedFunds',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'withdraw',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'withdrawsOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'yieldBalanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'yieldERC20',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [],
    name: 'yieldEth',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'yieldFeeBips',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'yieldTotal',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'yieldTotalOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CrowdFinancingV1Factory
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x8e78d80599197c501353453f73b0b92a402077d6)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xf53e3729aC1caDd24D5986b2738D0DEE5f4eD30A)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x24379629781d03a0Fe67D9712FD2d76a92EfEF14)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x83a322729C3172B0cc6Bf3a3204Fa83E683c584E)
 */
export const crowdFinancingV1FactoryABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'DeployFeeChange',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'recipient',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'fee', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'DeployFeeTransfer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'deployment',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Deployment',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'feeCollector',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'upfrontBips',
        internalType: 'uint16',
        type: 'uint16',
        indexed: false,
      },
      {
        name: 'payoutBips',
        internalType: 'uint16',
        type: 'uint16',
        indexed: false,
      },
    ],
    name: 'FeeScheduleChange',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'recipient', internalType: 'address', type: 'address' },
      { name: 'minGoal', internalType: 'uint256', type: 'uint256' },
      { name: 'maxGoal', internalType: 'uint256', type: 'uint256' },
      { name: 'minContribution', internalType: 'uint256', type: 'uint256' },
      { name: 'maxContribution', internalType: 'uint256', type: 'uint256' },
      { name: 'holdOff', internalType: 'uint32', type: 'uint32' },
      { name: 'duration', internalType: 'uint32', type: 'uint32' },
      { name: 'erc20TokenAddr', internalType: 'address', type: 'address' },
    ],
    name: 'deployCampaign',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'feeSchedule',
    outputs: [
      { name: 'collector', internalType: 'address', type: 'address' },
      { name: 'transferFee', internalType: 'uint16', type: 'uint16' },
      { name: 'yieldFee', internalType: 'uint16', type: 'uint16' },
      { name: 'deployFee', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'recipient', internalType: 'address', type: 'address' }],
    name: 'transferDeployFees',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'feeCollector', internalType: 'address', type: 'address' },
      { name: 'feeTransferBips', internalType: 'uint16', type: 'uint16' },
      { name: 'feeYieldBips', internalType: 'uint16', type: 'uint16' },
    ],
    name: 'updateFeeSchedule',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'minFeeAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateMinimumDeployFee',
    outputs: [],
  },
] as const

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x8e78d80599197c501353453f73b0b92a402077d6)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xf53e3729aC1caDd24D5986b2738D0DEE5f4eD30A)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x24379629781d03a0Fe67D9712FD2d76a92EfEF14)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x83a322729C3172B0cc6Bf3a3204Fa83E683c584E)
 */
export const crowdFinancingV1FactoryAddress = {
  1: '0x8e78D80599197C501353453f73B0B92A402077d6',
  137: '0xf53e3729aC1caDd24D5986b2738D0DEE5f4eD30A',
  42161: '0x24379629781d03a0Fe67D9712FD2d76a92EfEF14',
  11155111: '0x83a322729C3172B0cc6Bf3a3204Fa83E683c584E',
} as const

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x8e78d80599197c501353453f73b0b92a402077d6)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xf53e3729aC1caDd24D5986b2738D0DEE5f4eD30A)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x24379629781d03a0Fe67D9712FD2d76a92EfEF14)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x83a322729C3172B0cc6Bf3a3204Fa83E683c584E)
 */
export const crowdFinancingV1FactoryConfig = {
  address: crowdFinancingV1FactoryAddress,
  abi: crowdFinancingV1FactoryABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC20Token
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20TokenABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'initialSupply', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Core
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link crowdFinancingV1ABI}__.
 */
export function getCrowdFinancingV1(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: crowdFinancingV1ABI, ...config })
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link crowdFinancingV1ABI}__.
 */
export function writeCrowdFinancingV1<TFunctionName extends string>(
  config:
    | Omit<
        WriteContractPreparedArgs<typeof crowdFinancingV1ABI, TFunctionName>,
        'abi'
      >
    | Omit<
        WriteContractUnpreparedArgs<typeof crowdFinancingV1ABI, TFunctionName>,
        'abi'
      >,
) {
  return writeContract({
    abi: crowdFinancingV1ABI,
    ...config,
  } as unknown as WriteContractArgs<typeof crowdFinancingV1ABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link crowdFinancingV1ABI}__.
 */
export function prepareWriteCrowdFinancingV1<
  TAbi extends readonly unknown[] = typeof crowdFinancingV1ABI,
  TFunctionName extends string = string,
>(config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>) {
  return prepareWriteContract({
    abi: crowdFinancingV1ABI,
    ...config,
  } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link crowdFinancingV1ABI}__.
 */
export function watchCrowdFinancingV1Event<
  TAbi extends readonly unknown[] = typeof crowdFinancingV1ABI,
  TEventName extends string = string,
>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi'>,
  callback: WatchContractEventCallback<TAbi, TEventName>,
) {
  return watchContractEvent(
    { abi: crowdFinancingV1ABI, ...config } as WatchContractEventConfig<
      TAbi,
      TEventName
    >,
    callback,
  )
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link crowdFinancingV1FactoryABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x8e78d80599197c501353453f73b0b92a402077d6)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xf53e3729aC1caDd24D5986b2738D0DEE5f4eD30A)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x24379629781d03a0Fe67D9712FD2d76a92EfEF14)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x83a322729C3172B0cc6Bf3a3204Fa83E683c584E)
 */
export function getCrowdFinancingV1Factory(
  config: Omit<GetContractArgs, 'abi' | 'address'> & {
    chainId?: keyof typeof crowdFinancingV1FactoryAddress
  },
) {
  return getContract({
    abi: crowdFinancingV1FactoryABI,
    address:
      crowdFinancingV1FactoryAddress[
        config.chainId as keyof typeof crowdFinancingV1FactoryAddress
      ],
    ...config,
  })
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link crowdFinancingV1FactoryABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x8e78d80599197c501353453f73b0b92a402077d6)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xf53e3729aC1caDd24D5986b2738D0DEE5f4eD30A)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x24379629781d03a0Fe67D9712FD2d76a92EfEF14)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x83a322729C3172B0cc6Bf3a3204Fa83E683c584E)
 */
export function writeCrowdFinancingV1Factory<
  TFunctionName extends string,
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof crowdFinancingV1FactoryAddress,
>(
  config:
    | (Omit<
        WriteContractPreparedArgs<
          typeof crowdFinancingV1FactoryABI,
          TFunctionName
        >,
        'abi' | 'address'
      > & {
        mode: TMode
        chainId?: TMode extends 'prepared'
          ? TChainId
          : keyof typeof crowdFinancingV1FactoryAddress
      })
    | (Omit<
        WriteContractUnpreparedArgs<
          typeof crowdFinancingV1FactoryABI,
          TFunctionName
        >,
        'abi' | 'address'
      > & {
        mode: TMode
        chainId?: TMode extends 'prepared'
          ? TChainId
          : keyof typeof crowdFinancingV1FactoryAddress
      }),
) {
  return writeContract({
    abi: crowdFinancingV1FactoryABI,
    address:
      crowdFinancingV1FactoryAddress[
        config.chainId as keyof typeof crowdFinancingV1FactoryAddress
      ],
    ...config,
  } as unknown as WriteContractArgs<
    typeof crowdFinancingV1FactoryABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link crowdFinancingV1FactoryABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x8e78d80599197c501353453f73b0b92a402077d6)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xf53e3729aC1caDd24D5986b2738D0DEE5f4eD30A)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x24379629781d03a0Fe67D9712FD2d76a92EfEF14)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x83a322729C3172B0cc6Bf3a3204Fa83E683c584E)
 */
export function prepareWriteCrowdFinancingV1Factory<
  TAbi extends readonly unknown[] = typeof crowdFinancingV1FactoryABI,
  TFunctionName extends string = string,
>(
  config: Omit<
    PrepareWriteContractConfig<TAbi, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof crowdFinancingV1FactoryAddress },
) {
  return prepareWriteContract({
    abi: crowdFinancingV1FactoryABI,
    address:
      crowdFinancingV1FactoryAddress[
        config.chainId as keyof typeof crowdFinancingV1FactoryAddress
      ],
    ...config,
  } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link crowdFinancingV1FactoryABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x8e78d80599197c501353453f73b0b92a402077d6)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xf53e3729aC1caDd24D5986b2738D0DEE5f4eD30A)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x24379629781d03a0Fe67D9712FD2d76a92EfEF14)
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x83a322729C3172B0cc6Bf3a3204Fa83E683c584E)
 */
export function watchCrowdFinancingV1FactoryEvent<
  TAbi extends readonly unknown[] = typeof crowdFinancingV1FactoryABI,
  TEventName extends string = string,
>(
  config: Omit<
    WatchContractEventConfig<TAbi, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof crowdFinancingV1FactoryAddress },
  callback: WatchContractEventCallback<TAbi, TEventName>,
) {
  return watchContractEvent(
    {
      abi: crowdFinancingV1FactoryABI,
      address:
        crowdFinancingV1FactoryAddress[
          config.chainId as keyof typeof crowdFinancingV1FactoryAddress
        ],
      ...config,
    } as WatchContractEventConfig<TAbi, TEventName>,
    callback,
  )
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link erc20TokenABI}__.
 */
export function getErc20Token(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: erc20TokenABI, ...config })
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link erc20TokenABI}__.
 */
export function writeErc20Token<TFunctionName extends string>(
  config:
    | Omit<
        WriteContractPreparedArgs<typeof erc20TokenABI, TFunctionName>,
        'abi'
      >
    | Omit<
        WriteContractUnpreparedArgs<typeof erc20TokenABI, TFunctionName>,
        'abi'
      >,
) {
  return writeContract({
    abi: erc20TokenABI,
    ...config,
  } as unknown as WriteContractArgs<typeof erc20TokenABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link erc20TokenABI}__.
 */
export function prepareWriteErc20Token<
  TAbi extends readonly unknown[] = typeof erc20TokenABI,
  TFunctionName extends string = string,
>(config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>) {
  return prepareWriteContract({
    abi: erc20TokenABI,
    ...config,
  } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link erc20TokenABI}__.
 */
export function watchErc20TokenEvent<
  TAbi extends readonly unknown[] = typeof erc20TokenABI,
  TEventName extends string = string,
>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi'>,
  callback: WatchContractEventCallback<TAbi, TEventName>,
) {
  return watchContractEvent(
    { abi: erc20TokenABI, ...config } as WatchContractEventConfig<
      TAbi,
      TEventName
    >,
    callback,
  )
}
